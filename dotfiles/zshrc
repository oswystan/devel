##################################################################
##
## zsh configurations
##
##################################################################

## PATH
export PATH=/opt/homebrew/bin:$HOME/.local/bin:${PATH}
export PATH=/opt/homebrew/opt/ruby/bin:$PATH

## homebrew
export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.aliyun.com/homebrew/homebrew-bottles
export HOMEBREW_NO_AUTO_UPDATE=true

## misc
export LC_ALL="en_US.UTF-8"

## alias
alias vim=nvim
alias vi=nvim
alias cls="clear && printf '\033c'"
alias ls=lsd
alias ll="ls -l"
alias la="ls -lA"
alias df="df -h"
alias u2g="iconv -f gbk -t utf-8 "
alias g2u="iconv -t gbk -f utf-8 "
alias ..='cd ..'
alias ...='cd ../..'
if [ "$(uname)" = "Darwin" ]; then
  alias subl="'/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl'"
  alias lsusb="system_profiler SPUSBDataType"
  alias code='/Applications/Visual\ Studio\ Code.app/Contents/Resources/app/bin/code'
fi

#################################
## vpn
#################################
function vpn.on() {
  export https_proxy=http://127.0.0.1:7890
  export http_proxy=http://127.0.0.1:7890
  export all_proxy=socks5://127.0.0.1:7890
}

function vpn.off() {
  export https_proxy=
  export http_proxy=
  export all_proxy=
}

#################################
## compression & decompression
#################################
function x() {
  [[ $# -lt 1 ]] && echo "usage: $0 <file-1> ..." && return 1
  while [ $# -ge 1 ]; do
    [[ ! -f $1 ]] && echo "ERROR: $1 not found" && shift && continue
    case $1 in
      *.tar.gz|*.tgz)
        tar xvf "$1"
        ;;
      *.tar.bz2)
        tar jxvf "$1"
        ;;
      *.tar.xz)
        tar Jxvf "$1"
        ;;
      *.zip)
        unzip "$1"
        ;;
      *.rar)
        unrar x "$1"
        ;;
      *.7z)
        7z x "$1"
        ;;
      *)
        echo "ERROR: unknown type for $1"
        ;;
    esac;
    shift
  done
}

function z() {
  [[ $# -lt 1 ]] && echo "usage: $0 <file-1> ..." && return 1
  tar Jcvf "${1}.tar.xz" "${1}"
}
function z.bz2() {
  [[ $# -lt 1 ]] && echo "usage: $0 <file-1> ..." && return 1
  tar jcvf "${1}.tar.bz2" "${1}"
}
function z.gz() {
  [[ $# -lt 1 ]] && echo "usage: $0 <file-1> ..." && return 1
  tar zcvf "${1}.tar.gz" "${1}"
}
function z.7z() {
  [[ $# -lt 1 ]] && echo "usage: $0 <file-1> ..." && return 1
  7z a "${1}.7z" "${1}"
}
function z.zip() {
  [[ $# -lt 1 ]] && echo "usage: $0 <file-1> ..." && return 1
  zip -r "${1}.zip" "${1}"
}
function z.rar() {
  [[ $# -lt 1 ]] && echo "usage: $0 <file-1> ..." && return 1
  rar a "${1}.rar" "${1}"
}

###################################
## github commands
###################################
hub() {
  if [[ $# -eq 0 ]]; then
    cd "$HOME/usr/project/github"
    return 0
  fi
  echo "==>start clone $1..." &&
    git clone "git@oswystan.github.com:oswystan/$1" &&
    cd "$1" &&
    git config --local user.name "oswystan" &&
    git config --local user.email "oswystan@126.com" &&
    cd - &&
    echo "==>succ" || echo "==>fail!!"
}

hub.key() {
  ssh-keygen -t ed25519 -C "oswystan@github" -f oswystan.github
}

ttm() {
  if [[ $# -eq 0 ]]; then
    cd "$HOME/usr/project/github"
    return 0
  fi
  echo "==>start clone $1..." &&
    git clone "git@ticktechman.github.com:ticktechman/$1" &&
    cd "$1" &&
    git config --local user.name "ticktechman" &&
    git config --local user.email "geek.wystan@gmail.com" &&
    cd - &&
    echo "==>succ" || echo "==>fail!!"
}
ttm.key() {
  ssh-keygen -t ed25519 -C "ticktechman@github" -f ticktechman.github
}

###################################
## highlight a file and
## copy the rich text to system clipboard
###################################
hl() {
  [[ $# -ne 1 ]] && {
    echo "Usage: hl <file>"
    return 1
  }
  highlight -O rtf --font 'mplus Nerd Font' --font-size 24 --style molokai "$1" | pbcopy
}

##################################
## setup a http server using python
##################################
http.here {
  python -m http.server 80
}

##################################
## clear exif info
##    brew install exiftool
##################################
exif.clear() {
  [[ $# -ne 1 ]] && {
    echo "Usage: exif.clear <file>"
    return 1
  }
  exiftool -all= $1
}
exif.ls() {
  [[ $# -ne 1 ]] && {
    echo "Usage: exif.ls <file>"
    return 1
  }
  exiftool $1
}
